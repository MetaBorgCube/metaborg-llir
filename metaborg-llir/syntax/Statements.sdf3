module Statements

imports
  Constants
  Types
  Expressions
  Identifiers-Functions
  Functions

context-free syntax
  ConstantOrGlobal.Constant               = [constant]
  ConstantOrGlobal.Global                 = [global]

  GlobalFlags.GlobalFlags                 = [[LinkageType]? [Visibility]? [DLLStorageClass]? [ThreadStorageModel]? [UnnamedAddress]?]
  GlobalVariableFlags.GlobalVariableFlags = [[GlobalFlags] [AddressSpace]? [ExternallyInitialized]?]
  GlobalVariableAttrs.GlobalVariableAttrs = [[MaybeSection?] [MaybeAlignment?]]
  IFuncFlags.IFuncFlags                   = [[LinkageType]? [Visibility]?]

  TopLevelStatement.FunctionDeclaration   = FunctionDeclaration
  TopLevelStatement.FunctionDefinition    = FunctionDefinition
  TopLevelStatement.InlineAssembly        = [module asm [StringConstant]]
  TopLevelStatement.TargetTriple          = [target triple = [StringConstant]]
  TopLevelStatement.TargetLayout          = [target datalayout = [StringConstant]]
  TopLevelStatement.GlobalAlias           = [
  	[GlobalLabel] = [GlobalFlags] alias [Type], [PointerType] [GlobalLabel]
  ]
  TopLevelStatement.GlobalVariable        = [
  	[GlobalLabel] = [GlobalVariableFlags] [ConstantOrGlobal] [Type] [Constant]? [GlobalVariableAttrs]
  ]
  TopLevelStatement.IFunc                 = [
  	[GlobalLabel] = [IFuncFlags] ifunc [FunctionType], [PointerType] [GlobalLabel]
  ]
  TopLevelStatement.TypeDefinition       = [
  	[LocalLabel] = type [AggregateType]
  ]
  