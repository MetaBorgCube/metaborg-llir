module Instructions-Flow

imports
  Types
  Constants
  Expressions
  Identifiers-Functions
  Identifiers-Math
  Functions
  
context-free syntax
  LabelTarget.LabelTarget   = [label [Label]]

  BranchTarget.Conditional  = [i1 [Value], label [Label], label [Label]]
  BranchTarget.Label        = LabelTarget

  SwitchTarget.SwitchTarget = [[IntegerType] [Value], label [Label]]

  Instruction.RET           = [ret [ReturnValue]]
  Instruction.BR            = [br [BranchTarget]]
  Instruction.CALL          = [[CallOptimization?] call [FastMathFlags*] [CallingConvention?] [ParameterAttribute*] [Type] [PointerType?] [Value]([{FunctionArgument ","}*; text="arguments"]) [FunctionCallAttribute*]]
  Instruction.SWITCH        = <switch <IntegerType> <Value>, label <Label> [ <SwitchTarget*> ]>
  Instruction.INDIRECTBR    = <indirectbr <PointerType> <LocalLabel>, [ <{LabelTarget ","}*> ]>
  Instruction.UNREACHABLE   = [unreachable]