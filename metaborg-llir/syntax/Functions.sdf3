module Functions

imports
  Constants
  Types
  Expressions
  Identifiers-Functions
  Instructions

context-free syntax
  FunctionArgument.FunctionArgument          = [[FirstClassType] [Value]]
  
  FunctionParameterDecl.FunctionParameter    = [[FirstClassType] [{ParameterAttribute " "}*; text="parameter attributes"]]
  FunctionParameterDecl.VariableParameter    = [...]

  FunctionParameter.FunctionParameter        = [[FirstClassType] [Label] [{ParameterAttribute " "}*; text="parameter attributes"]]

  ReturnValue.Value                          = [[FirstClassType] [Value]]
  ReturnValue.Void                           = [void]
  
  ReturnType.Value                           = FirstClassType
  ReturnType.Void                            = [void]

  FunctionFlags.FunctionFlags                = [[LinkageType?] [Visibility?] [DLLStorageClass?] [CallingConvention?] [UnnamedAddress?]]
  FunctionAttrs.FunctionAttrs                = [[{FunctionAttribute " "}*;text="function attributes"] [Alignment?] [GCStrategy?] [Prefix?] [Prologue?]]
  FunctionDeclaration.FunctionDeclaration    = [
  	declare [FunctionFlags] [ReturnType] [ParameterAttribute*] [Label]([{FunctionParameterDecl ","}*; text="parameters"]) [FunctionAttrs]
  ]
  FunctionDefinition.FunctionDefinition      = [
  	define [FunctionFlags] [ReturnType] [ParameterAttribute*] [Label]([{FunctionParameter ","}*; text="parameters"]) [FunctionAttrs] [Personality?] {
  		[BasicBlock*]
  	}
  ]
  FunctionDeclaration.Simple = [declare void [ParameterAttribute*] [Label]()]

