module Instructions-Binary

imports
  Types
  Expressions
  Identifiers-Math

context-free syntax
  Instruction.ADD  = [add [{WrapFlags " "}*; text="flags"] [Type] [Value], [Value]]
  Instruction.SUB  = [sub [{WrapFlags " "}*; text="flags"] [Type] [Value], [Value]]
  Instruction.MUL  = [mul [{WrapFlags " "}*; text="flags"] [Type] [Value], [Value]]

  Instruction.UDIV = [udiv [{PrecisionFlags " "}*; text="flags"] [Type] [Value], [Value]]
  Instruction.SDIV = [sdiv [{PrecisionFlags " "}*; text="flags"] [Type] [Value], [Value]]

  Instruction.UREM = [urem [Type] [Value], [Value]]
  Instruction.SREM = [srem [Type] [Value], [Value]]
  
  Instruction.SHL  = [shl [{WrapFlags " "}*; text="flags"] [Type] [Value], [Value]]
  Instruction.LSHR = [lshr [{WrapFlags " "}*; text="flags"] [Type] [Value], [Value]]
  Instruction.ASHR = [ashr [{WrapFlags " "}*; text="flags"] [Type] [Value], [Value]]
  
  Instruction.AND  = [and [Type] [Value], [Value]]
  Instruction.OR   = [or [Type] [Value], [Value]]
  Instruction.XOR  = [xor [Type] [Value], [Value]]