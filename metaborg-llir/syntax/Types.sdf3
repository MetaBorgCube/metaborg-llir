module Types

imports
  Common
  Expressions

context-free syntax
  OpaqueType.OpaqueType          = [opaque]
  
  VoidType.VoidType              = [void]
  
  LabelType.LabelType            = [label]
  
  TokenType.TokenType            = [token]
  
  MetadataType.MetadataType      = [metadata]
  
  IntegerType.IntegerType        = [i[INT]]

  PointerType.PointerType        = [[Type]*]

  VectorType.VectorType          = [<[INT] x [IntegerType]>]
  
  ArrayType.ArrayType            = <[<INT> x <Type>]>

  StructType.StructType          = [{ [{Type ","}*; text="members"] }]
  StructType.PackedStructType    = [<{ [{Type ","}*; text="members"] }>]

  FunctionParamType.Type         = Type
  FunctionParamType.VarArg       = [...]

  FunctionType.FunctionType      = [[Type; text="return type"] ([{FunctionParamType ","}*; text="parameters"])]

  SingleValueType.IntegerType    = IntegerType
  SingleValueType.PointerType    = PointerType
  SingleValueType.VectorType     = VectorType

  AggregateType.ArrayType        = ArrayType
  AggregateType.StructType       = StructType
  AggregateType.OpaqueType       = OpaqueType

  FirstClassType.SingleValueType = SingleValueType
  FirstClassType.LabelType       = LabelType
  FirstClassType.TokenType       = TokenType
  FirstClassType.MetadataType    = MetadataType
  FirstClassType.StructType      = StructType
  FirstClassType.UserType        = Label
  
  Type.VoidType                  = VoidType
  Type.FunctionType              = FunctionType
  Type.FirstClassType            = FirstClassType
  Type.AggregateType             = AggregateType
  